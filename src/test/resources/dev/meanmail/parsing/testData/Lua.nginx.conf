server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name _;

    set $my_nginx_var "";

    location / {
        access_by_lua_block {
            local redis = require "resty.redis"
            local red = redis:new()
            red:set_timeout(200)
            local ok, err = red:connect("127.0.0.1", 6379)
            if not ok then
                return
            end

            local access_num, err = red:incr("access_" .. ngx.var.remote_addr)

            if (not access_num or access_num >= 10) then
                ngx.var.my_nginx_var = "deny"
                return
            end
            ngx.var.my_nginx_var = "allow"
            red:expire("access_" .. ngx.var.remote_addr, 16*3600)
        }
    }

    ssl_certificate_by_lua_block {
        if ngx.var.my_nginx_var == "deny" then
            ngx.log(ngx.ERR, "access denied")
            return ngx.exit(ngx.HTTP_FORBIDDEN)
        end
    }

    set_by_lua_block {
        return ngx.var.my_nginx_var
    }
}
